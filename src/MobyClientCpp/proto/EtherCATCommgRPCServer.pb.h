// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: EtherCATCommgRPCServer.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_EtherCATCommgRPCServer_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_EtherCATCommgRPCServer_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3008000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3008000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_EtherCATCommgRPCServer_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_EtherCATCommgRPCServer_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[26]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_EtherCATCommgRPCServer_2eproto;
namespace GRPCECat {
class DIList;
class DIListDefaultTypeInternal;
extern DIListDefaultTypeInternal _DIList_default_instance_;
class DOList;
class DOListDefaultTypeInternal;
extern DOListDefaultTypeInternal _DOList_default_instance_;
class DoubleVals;
class DoubleValsDefaultTypeInternal;
extern DoubleValsDefaultTypeInternal _DoubleVals_default_instance_;
class Empty;
class EmptyDefaultTypeInternal;
extern EmptyDefaultTypeInternal _Empty_default_instance_;
class EndtoolRevCDTTx;
class EndtoolRevCDTTxDefaultTypeInternal;
extern EndtoolRevCDTTxDefaultTypeInternal _EndtoolRevCDTTx_default_instance_;
class EndtoolRx;
class EndtoolRxDefaultTypeInternal;
extern EndtoolRxDefaultTypeInternal _EndtoolRx_default_instance_;
class EndtoolTx;
class EndtoolTxDefaultTypeInternal;
extern EndtoolTxDefaultTypeInternal _EndtoolTx_default_instance_;
class FTsensorTx;
class FTsensorTxDefaultTypeInternal;
extern FTsensorTxDefaultTypeInternal _FTsensorTx_default_instance_;
class FloatVal;
class FloatValDefaultTypeInternal;
extern FloatValDefaultTypeInternal _FloatVal_default_instance_;
class FloatVals;
class FloatValsDefaultTypeInternal;
extern FloatValsDefaultTypeInternal _FloatVals_default_instance_;
class IOBoardRx;
class IOBoardRxDefaultTypeInternal;
extern IOBoardRxDefaultTypeInternal _IOBoardRx_default_instance_;
class IOBoardTx;
class IOBoardTxDefaultTypeInternal;
extern IOBoardTxDefaultTypeInternal _IOBoardTx_default_instance_;
class IntVal;
class IntValDefaultTypeInternal;
extern IntValDefaultTypeInternal _IntVal_default_instance_;
class IntVals;
class IntValsDefaultTypeInternal;
extern IntValsDefaultTypeInternal _IntVals_default_instance_;
class MotorDriverRx;
class MotorDriverRxDefaultTypeInternal;
extern MotorDriverRxDefaultTypeInternal _MotorDriverRx_default_instance_;
class MotorDriverRxIndex;
class MotorDriverRxIndexDefaultTypeInternal;
extern MotorDriverRxIndexDefaultTypeInternal _MotorDriverRxIndex_default_instance_;
class MotorDriverTx;
class MotorDriverTxDefaultTypeInternal;
extern MotorDriverTxDefaultTypeInternal _MotorDriverTx_default_instance_;
class MotorDriverTxIndex;
class MotorDriverTxIndexDefaultTypeInternal;
extern MotorDriverTxIndexDefaultTypeInternal _MotorDriverTxIndex_default_instance_;
class PanasonicDriverRx;
class PanasonicDriverRxDefaultTypeInternal;
extern PanasonicDriverRxDefaultTypeInternal _PanasonicDriverRx_default_instance_;
class PanasonicDriverTx;
class PanasonicDriverTxDefaultTypeInternal;
extern PanasonicDriverTxDefaultTypeInternal _PanasonicDriverTx_default_instance_;
class RobotusFTTx;
class RobotusFTTxDefaultTypeInternal;
extern RobotusFTTxDefaultTypeInternal _RobotusFTTx_default_instance_;
class ServoIndex;
class ServoIndexDefaultTypeInternal;
extern ServoIndexDefaultTypeInternal _ServoIndex_default_instance_;
class ServoParam;
class ServoParamDefaultTypeInternal;
extern ServoParamDefaultTypeInternal _ServoParam_default_instance_;
class StringVal;
class StringValDefaultTypeInternal;
extern StringValDefaultTypeInternal _StringVal_default_instance_;
class TargetPos;
class TargetPosDefaultTypeInternal;
extern TargetPosDefaultTypeInternal _TargetPos_default_instance_;
class VelAccBoundary;
class VelAccBoundaryDefaultTypeInternal;
extern VelAccBoundaryDefaultTypeInternal _VelAccBoundary_default_instance_;
}  // namespace GRPCECat
PROTOBUF_NAMESPACE_OPEN
template<> ::GRPCECat::DIList* Arena::CreateMaybeMessage<::GRPCECat::DIList>(Arena*);
template<> ::GRPCECat::DOList* Arena::CreateMaybeMessage<::GRPCECat::DOList>(Arena*);
template<> ::GRPCECat::DoubleVals* Arena::CreateMaybeMessage<::GRPCECat::DoubleVals>(Arena*);
template<> ::GRPCECat::Empty* Arena::CreateMaybeMessage<::GRPCECat::Empty>(Arena*);
template<> ::GRPCECat::EndtoolRevCDTTx* Arena::CreateMaybeMessage<::GRPCECat::EndtoolRevCDTTx>(Arena*);
template<> ::GRPCECat::EndtoolRx* Arena::CreateMaybeMessage<::GRPCECat::EndtoolRx>(Arena*);
template<> ::GRPCECat::EndtoolTx* Arena::CreateMaybeMessage<::GRPCECat::EndtoolTx>(Arena*);
template<> ::GRPCECat::FTsensorTx* Arena::CreateMaybeMessage<::GRPCECat::FTsensorTx>(Arena*);
template<> ::GRPCECat::FloatVal* Arena::CreateMaybeMessage<::GRPCECat::FloatVal>(Arena*);
template<> ::GRPCECat::FloatVals* Arena::CreateMaybeMessage<::GRPCECat::FloatVals>(Arena*);
template<> ::GRPCECat::IOBoardRx* Arena::CreateMaybeMessage<::GRPCECat::IOBoardRx>(Arena*);
template<> ::GRPCECat::IOBoardTx* Arena::CreateMaybeMessage<::GRPCECat::IOBoardTx>(Arena*);
template<> ::GRPCECat::IntVal* Arena::CreateMaybeMessage<::GRPCECat::IntVal>(Arena*);
template<> ::GRPCECat::IntVals* Arena::CreateMaybeMessage<::GRPCECat::IntVals>(Arena*);
template<> ::GRPCECat::MotorDriverRx* Arena::CreateMaybeMessage<::GRPCECat::MotorDriverRx>(Arena*);
template<> ::GRPCECat::MotorDriverRxIndex* Arena::CreateMaybeMessage<::GRPCECat::MotorDriverRxIndex>(Arena*);
template<> ::GRPCECat::MotorDriverTx* Arena::CreateMaybeMessage<::GRPCECat::MotorDriverTx>(Arena*);
template<> ::GRPCECat::MotorDriverTxIndex* Arena::CreateMaybeMessage<::GRPCECat::MotorDriverTxIndex>(Arena*);
template<> ::GRPCECat::PanasonicDriverRx* Arena::CreateMaybeMessage<::GRPCECat::PanasonicDriverRx>(Arena*);
template<> ::GRPCECat::PanasonicDriverTx* Arena::CreateMaybeMessage<::GRPCECat::PanasonicDriverTx>(Arena*);
template<> ::GRPCECat::RobotusFTTx* Arena::CreateMaybeMessage<::GRPCECat::RobotusFTTx>(Arena*);
template<> ::GRPCECat::ServoIndex* Arena::CreateMaybeMessage<::GRPCECat::ServoIndex>(Arena*);
template<> ::GRPCECat::ServoParam* Arena::CreateMaybeMessage<::GRPCECat::ServoParam>(Arena*);
template<> ::GRPCECat::StringVal* Arena::CreateMaybeMessage<::GRPCECat::StringVal>(Arena*);
template<> ::GRPCECat::TargetPos* Arena::CreateMaybeMessage<::GRPCECat::TargetPos>(Arena*);
template<> ::GRPCECat::VelAccBoundary* Arena::CreateMaybeMessage<::GRPCECat::VelAccBoundary>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace GRPCECat {

// ===================================================================

class Empty :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.Empty) */ {
 public:
  Empty();
  virtual ~Empty();

  Empty(const Empty& from);
  Empty(Empty&& from) noexcept
    : Empty() {
    *this = ::std::move(from);
  }

  inline Empty& operator=(const Empty& from) {
    CopyFrom(from);
    return *this;
  }
  inline Empty& operator=(Empty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Empty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Empty* internal_default_instance() {
    return reinterpret_cast<const Empty*>(
               &_Empty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Empty* other);
  friend void swap(Empty& a, Empty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Empty* New() const final {
    return CreateMaybeMessage<Empty>(nullptr);
  }

  Empty* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Empty>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Empty& from);
  void MergeFrom(const Empty& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Empty* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.Empty";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:GRPCECat.Empty)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class ServoIndex :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.ServoIndex) */ {
 public:
  ServoIndex();
  virtual ~ServoIndex();

  ServoIndex(const ServoIndex& from);
  ServoIndex(ServoIndex&& from) noexcept
    : ServoIndex() {
    *this = ::std::move(from);
  }

  inline ServoIndex& operator=(const ServoIndex& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServoIndex& operator=(ServoIndex&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ServoIndex& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServoIndex* internal_default_instance() {
    return reinterpret_cast<const ServoIndex*>(
               &_ServoIndex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(ServoIndex* other);
  friend void swap(ServoIndex& a, ServoIndex& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServoIndex* New() const final {
    return CreateMaybeMessage<ServoIndex>(nullptr);
  }

  ServoIndex* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ServoIndex>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ServoIndex& from);
  void MergeFrom(const ServoIndex& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServoIndex* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.ServoIndex";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 ecatIndex = 1;
  void clear_ecatindex();
  static const int kEcatIndexFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 ecatindex() const;
  void set_ecatindex(::PROTOBUF_NAMESPACE_ID::int32 value);

  // bool servoState = 2;
  void clear_servostate();
  static const int kServoStateFieldNumber = 2;
  bool servostate() const;
  void set_servostate(bool value);

  // @@protoc_insertion_point(class_scope:GRPCECat.ServoIndex)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 ecatindex_;
  bool servostate_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class MotorDriverTx :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.MotorDriverTx) */ {
 public:
  MotorDriverTx();
  virtual ~MotorDriverTx();

  MotorDriverTx(const MotorDriverTx& from);
  MotorDriverTx(MotorDriverTx&& from) noexcept
    : MotorDriverTx() {
    *this = ::std::move(from);
  }

  inline MotorDriverTx& operator=(const MotorDriverTx& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotorDriverTx& operator=(MotorDriverTx&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MotorDriverTx& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MotorDriverTx* internal_default_instance() {
    return reinterpret_cast<const MotorDriverTx*>(
               &_MotorDriverTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MotorDriverTx* other);
  friend void swap(MotorDriverTx& a, MotorDriverTx& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MotorDriverTx* New() const final {
    return CreateMaybeMessage<MotorDriverTx>(nullptr);
  }

  MotorDriverTx* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MotorDriverTx>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MotorDriverTx& from);
  void MergeFrom(const MotorDriverTx& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MotorDriverTx* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.MotorDriverTx";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 statusWord = 1;
  void clear_statusword();
  static const int kStatusWordFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::uint32 statusword() const;
  void set_statusword(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // int32 modeOpDisp = 2;
  void clear_modeopdisp();
  static const int kModeOpDispFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 modeopdisp() const;
  void set_modeopdisp(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 actualPosition = 3;
  void clear_actualposition();
  static const int kActualPositionFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 actualposition() const;
  void set_actualposition(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 actualVelocity = 4;
  void clear_actualvelocity();
  static const int kActualVelocityFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int32 actualvelocity() const;
  void set_actualvelocity(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 actualTorque = 5;
  void clear_actualtorque();
  static const int kActualTorqueFieldNumber = 5;
  ::PROTOBUF_NAMESPACE_ID::int32 actualtorque() const;
  void set_actualtorque(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:GRPCECat.MotorDriverTx)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 statusword_;
  ::PROTOBUF_NAMESPACE_ID::int32 modeopdisp_;
  ::PROTOBUF_NAMESPACE_ID::int32 actualposition_;
  ::PROTOBUF_NAMESPACE_ID::int32 actualvelocity_;
  ::PROTOBUF_NAMESPACE_ID::int32 actualtorque_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class MotorDriverRx :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.MotorDriverRx) */ {
 public:
  MotorDriverRx();
  virtual ~MotorDriverRx();

  MotorDriverRx(const MotorDriverRx& from);
  MotorDriverRx(MotorDriverRx&& from) noexcept
    : MotorDriverRx() {
    *this = ::std::move(from);
  }

  inline MotorDriverRx& operator=(const MotorDriverRx& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotorDriverRx& operator=(MotorDriverRx&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MotorDriverRx& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MotorDriverRx* internal_default_instance() {
    return reinterpret_cast<const MotorDriverRx*>(
               &_MotorDriverRx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MotorDriverRx* other);
  friend void swap(MotorDriverRx& a, MotorDriverRx& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MotorDriverRx* New() const final {
    return CreateMaybeMessage<MotorDriverRx>(nullptr);
  }

  MotorDriverRx* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MotorDriverRx>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MotorDriverRx& from);
  void MergeFrom(const MotorDriverRx& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MotorDriverRx* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.MotorDriverRx";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 controlWord = 1;
  void clear_controlword();
  static const int kControlWordFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::uint32 controlword() const;
  void set_controlword(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // int32 modeOp = 2;
  void clear_modeop();
  static const int kModeOpFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 modeop() const;
  void set_modeop(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 targetPosition = 3;
  void clear_targetposition();
  static const int kTargetPositionFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 targetposition() const;
  void set_targetposition(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 targetVelocity = 4;
  void clear_targetvelocity();
  static const int kTargetVelocityFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int32 targetvelocity() const;
  void set_targetvelocity(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 targetTorque = 5;
  void clear_targettorque();
  static const int kTargetTorqueFieldNumber = 5;
  ::PROTOBUF_NAMESPACE_ID::int32 targettorque() const;
  void set_targettorque(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:GRPCECat.MotorDriverRx)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 controlword_;
  ::PROTOBUF_NAMESPACE_ID::int32 modeop_;
  ::PROTOBUF_NAMESPACE_ID::int32 targetposition_;
  ::PROTOBUF_NAMESPACE_ID::int32 targetvelocity_;
  ::PROTOBUF_NAMESPACE_ID::int32 targettorque_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class PanasonicDriverTx :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.PanasonicDriverTx) */ {
 public:
  PanasonicDriverTx();
  virtual ~PanasonicDriverTx();

  PanasonicDriverTx(const PanasonicDriverTx& from);
  PanasonicDriverTx(PanasonicDriverTx&& from) noexcept
    : PanasonicDriverTx() {
    *this = ::std::move(from);
  }

  inline PanasonicDriverTx& operator=(const PanasonicDriverTx& from) {
    CopyFrom(from);
    return *this;
  }
  inline PanasonicDriverTx& operator=(PanasonicDriverTx&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PanasonicDriverTx& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PanasonicDriverTx* internal_default_instance() {
    return reinterpret_cast<const PanasonicDriverTx*>(
               &_PanasonicDriverTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(PanasonicDriverTx* other);
  friend void swap(PanasonicDriverTx& a, PanasonicDriverTx& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PanasonicDriverTx* New() const final {
    return CreateMaybeMessage<PanasonicDriverTx>(nullptr);
  }

  PanasonicDriverTx* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PanasonicDriverTx>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PanasonicDriverTx& from);
  void MergeFrom(const PanasonicDriverTx& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PanasonicDriverTx* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.PanasonicDriverTx";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 statusWord = 1;
  void clear_statusword();
  static const int kStatusWordFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::uint32 statusword() const;
  void set_statusword(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // int32 modeOpDisp = 2;
  void clear_modeopdisp();
  static const int kModeOpDispFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 modeopdisp() const;
  void set_modeopdisp(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 actualPosition = 3;
  void clear_actualposition();
  static const int kActualPositionFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 actualposition() const;
  void set_actualposition(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 actualVelocity = 4;
  void clear_actualvelocity();
  static const int kActualVelocityFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int32 actualvelocity() const;
  void set_actualvelocity(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 actualTorque = 5;
  void clear_actualtorque();
  static const int kActualTorqueFieldNumber = 5;
  ::PROTOBUF_NAMESPACE_ID::int32 actualtorque() const;
  void set_actualtorque(::PROTOBUF_NAMESPACE_ID::int32 value);

  // uint32 errorCode = 6;
  void clear_errorcode();
  static const int kErrorCodeFieldNumber = 6;
  ::PROTOBUF_NAMESPACE_ID::uint32 errorcode() const;
  void set_errorcode(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:GRPCECat.PanasonicDriverTx)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 statusword_;
  ::PROTOBUF_NAMESPACE_ID::int32 modeopdisp_;
  ::PROTOBUF_NAMESPACE_ID::int32 actualposition_;
  ::PROTOBUF_NAMESPACE_ID::int32 actualvelocity_;
  ::PROTOBUF_NAMESPACE_ID::int32 actualtorque_;
  ::PROTOBUF_NAMESPACE_ID::uint32 errorcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class PanasonicDriverRx :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.PanasonicDriverRx) */ {
 public:
  PanasonicDriverRx();
  virtual ~PanasonicDriverRx();

  PanasonicDriverRx(const PanasonicDriverRx& from);
  PanasonicDriverRx(PanasonicDriverRx&& from) noexcept
    : PanasonicDriverRx() {
    *this = ::std::move(from);
  }

  inline PanasonicDriverRx& operator=(const PanasonicDriverRx& from) {
    CopyFrom(from);
    return *this;
  }
  inline PanasonicDriverRx& operator=(PanasonicDriverRx&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PanasonicDriverRx& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PanasonicDriverRx* internal_default_instance() {
    return reinterpret_cast<const PanasonicDriverRx*>(
               &_PanasonicDriverRx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(PanasonicDriverRx* other);
  friend void swap(PanasonicDriverRx& a, PanasonicDriverRx& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PanasonicDriverRx* New() const final {
    return CreateMaybeMessage<PanasonicDriverRx>(nullptr);
  }

  PanasonicDriverRx* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PanasonicDriverRx>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PanasonicDriverRx& from);
  void MergeFrom(const PanasonicDriverRx& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PanasonicDriverRx* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.PanasonicDriverRx";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 controlWord = 1;
  void clear_controlword();
  static const int kControlWordFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::uint32 controlword() const;
  void set_controlword(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // int32 modeOp = 2;
  void clear_modeop();
  static const int kModeOpFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 modeop() const;
  void set_modeop(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 targetPosition = 3;
  void clear_targetposition();
  static const int kTargetPositionFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 targetposition() const;
  void set_targetposition(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 targetVelocity = 4;
  void clear_targetvelocity();
  static const int kTargetVelocityFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int32 targetvelocity() const;
  void set_targetvelocity(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 targetTorque = 5;
  void clear_targettorque();
  static const int kTargetTorqueFieldNumber = 5;
  ::PROTOBUF_NAMESPACE_ID::int32 targettorque() const;
  void set_targettorque(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 maxTorque = 6;
  void clear_maxtorque();
  static const int kMaxTorqueFieldNumber = 6;
  ::PROTOBUF_NAMESPACE_ID::int32 maxtorque() const;
  void set_maxtorque(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 maxMotorSpeed = 7;
  void clear_maxmotorspeed();
  static const int kMaxMotorSpeedFieldNumber = 7;
  ::PROTOBUF_NAMESPACE_ID::int32 maxmotorspeed() const;
  void set_maxmotorspeed(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 touchProbe = 8;
  void clear_touchprobe();
  static const int kTouchProbeFieldNumber = 8;
  ::PROTOBUF_NAMESPACE_ID::int32 touchprobe() const;
  void set_touchprobe(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:GRPCECat.PanasonicDriverRx)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 controlword_;
  ::PROTOBUF_NAMESPACE_ID::int32 modeop_;
  ::PROTOBUF_NAMESPACE_ID::int32 targetposition_;
  ::PROTOBUF_NAMESPACE_ID::int32 targetvelocity_;
  ::PROTOBUF_NAMESPACE_ID::int32 targettorque_;
  ::PROTOBUF_NAMESPACE_ID::int32 maxtorque_;
  ::PROTOBUF_NAMESPACE_ID::int32 maxmotorspeed_;
  ::PROTOBUF_NAMESPACE_ID::int32 touchprobe_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class MotorDriverTxIndex :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.MotorDriverTxIndex) */ {
 public:
  MotorDriverTxIndex();
  virtual ~MotorDriverTxIndex();

  MotorDriverTxIndex(const MotorDriverTxIndex& from);
  MotorDriverTxIndex(MotorDriverTxIndex&& from) noexcept
    : MotorDriverTxIndex() {
    *this = ::std::move(from);
  }

  inline MotorDriverTxIndex& operator=(const MotorDriverTxIndex& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotorDriverTxIndex& operator=(MotorDriverTxIndex&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MotorDriverTxIndex& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MotorDriverTxIndex* internal_default_instance() {
    return reinterpret_cast<const MotorDriverTxIndex*>(
               &_MotorDriverTxIndex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(MotorDriverTxIndex* other);
  friend void swap(MotorDriverTxIndex& a, MotorDriverTxIndex& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MotorDriverTxIndex* New() const final {
    return CreateMaybeMessage<MotorDriverTxIndex>(nullptr);
  }

  MotorDriverTxIndex* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MotorDriverTxIndex>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MotorDriverTxIndex& from);
  void MergeFrom(const MotorDriverTxIndex& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MotorDriverTxIndex* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.MotorDriverTxIndex";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .GRPCECat.MotorDriverTx motorDriverTx = 2;
  bool has_motordrivertx() const;
  void clear_motordrivertx();
  static const int kMotorDriverTxFieldNumber = 2;
  const ::GRPCECat::MotorDriverTx& motordrivertx() const;
  ::GRPCECat::MotorDriverTx* release_motordrivertx();
  ::GRPCECat::MotorDriverTx* mutable_motordrivertx();
  void set_allocated_motordrivertx(::GRPCECat::MotorDriverTx* motordrivertx);

  // uint32 slaveIdx = 1;
  void clear_slaveidx();
  static const int kSlaveIdxFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::uint32 slaveidx() const;
  void set_slaveidx(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:GRPCECat.MotorDriverTxIndex)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::GRPCECat::MotorDriverTx* motordrivertx_;
  ::PROTOBUF_NAMESPACE_ID::uint32 slaveidx_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class MotorDriverRxIndex :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.MotorDriverRxIndex) */ {
 public:
  MotorDriverRxIndex();
  virtual ~MotorDriverRxIndex();

  MotorDriverRxIndex(const MotorDriverRxIndex& from);
  MotorDriverRxIndex(MotorDriverRxIndex&& from) noexcept
    : MotorDriverRxIndex() {
    *this = ::std::move(from);
  }

  inline MotorDriverRxIndex& operator=(const MotorDriverRxIndex& from) {
    CopyFrom(from);
    return *this;
  }
  inline MotorDriverRxIndex& operator=(MotorDriverRxIndex&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MotorDriverRxIndex& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MotorDriverRxIndex* internal_default_instance() {
    return reinterpret_cast<const MotorDriverRxIndex*>(
               &_MotorDriverRxIndex_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(MotorDriverRxIndex* other);
  friend void swap(MotorDriverRxIndex& a, MotorDriverRxIndex& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MotorDriverRxIndex* New() const final {
    return CreateMaybeMessage<MotorDriverRxIndex>(nullptr);
  }

  MotorDriverRxIndex* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MotorDriverRxIndex>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MotorDriverRxIndex& from);
  void MergeFrom(const MotorDriverRxIndex& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MotorDriverRxIndex* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.MotorDriverRxIndex";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .GRPCECat.MotorDriverRx motorDriverRx = 2;
  bool has_motordriverrx() const;
  void clear_motordriverrx();
  static const int kMotorDriverRxFieldNumber = 2;
  const ::GRPCECat::MotorDriverRx& motordriverrx() const;
  ::GRPCECat::MotorDriverRx* release_motordriverrx();
  ::GRPCECat::MotorDriverRx* mutable_motordriverrx();
  void set_allocated_motordriverrx(::GRPCECat::MotorDriverRx* motordriverrx);

  // uint32 slaveIdx = 1;
  void clear_slaveidx();
  static const int kSlaveIdxFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::uint32 slaveidx() const;
  void set_slaveidx(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:GRPCECat.MotorDriverRxIndex)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::GRPCECat::MotorDriverRx* motordriverrx_;
  ::PROTOBUF_NAMESPACE_ID::uint32 slaveidx_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class ServoParam :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.ServoParam) */ {
 public:
  ServoParam();
  virtual ~ServoParam();

  ServoParam(const ServoParam& from);
  ServoParam(ServoParam&& from) noexcept
    : ServoParam() {
    *this = ::std::move(from);
  }

  inline ServoParam& operator=(const ServoParam& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServoParam& operator=(ServoParam&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ServoParam& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ServoParam* internal_default_instance() {
    return reinterpret_cast<const ServoParam*>(
               &_ServoParam_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(ServoParam* other);
  friend void swap(ServoParam& a, ServoParam& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ServoParam* New() const final {
    return CreateMaybeMessage<ServoParam>(nullptr);
  }

  ServoParam* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ServoParam>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ServoParam& from);
  void MergeFrom(const ServoParam& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ServoParam* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.ServoParam";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 slaveIdx = 1;
  void clear_slaveidx();
  static const int kSlaveIdxFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::uint32 slaveidx() const;
  void set_slaveidx(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // int32 val = 2;
  void clear_val();
  static const int kValFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 val() const;
  void set_val(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:GRPCECat.ServoParam)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 slaveidx_;
  ::PROTOBUF_NAMESPACE_ID::int32 val_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class FTsensorTx :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.FTsensorTx) */ {
 public:
  FTsensorTx();
  virtual ~FTsensorTx();

  FTsensorTx(const FTsensorTx& from);
  FTsensorTx(FTsensorTx&& from) noexcept
    : FTsensorTx() {
    *this = ::std::move(from);
  }

  inline FTsensorTx& operator=(const FTsensorTx& from) {
    CopyFrom(from);
    return *this;
  }
  inline FTsensorTx& operator=(FTsensorTx&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FTsensorTx& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FTsensorTx* internal_default_instance() {
    return reinterpret_cast<const FTsensorTx*>(
               &_FTsensorTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(FTsensorTx* other);
  friend void swap(FTsensorTx& a, FTsensorTx& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FTsensorTx* New() const final {
    return CreateMaybeMessage<FTsensorTx>(nullptr);
  }

  FTsensorTx* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FTsensorTx>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FTsensorTx& from);
  void MergeFrom(const FTsensorTx& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FTsensorTx* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.FTsensorTx";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 fx = 1;
  void clear_fx();
  static const int kFxFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 fx() const;
  void set_fx(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 fy = 2;
  void clear_fy();
  static const int kFyFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 fy() const;
  void set_fy(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 fz = 3;
  void clear_fz();
  static const int kFzFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 fz() const;
  void set_fz(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 tx = 4;
  void clear_tx();
  static const int kTxFieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int32 tx() const;
  void set_tx(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 ty = 5;
  void clear_ty();
  static const int kTyFieldNumber = 5;
  ::PROTOBUF_NAMESPACE_ID::int32 ty() const;
  void set_ty(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 tz = 6;
  void clear_tz();
  static const int kTzFieldNumber = 6;
  ::PROTOBUF_NAMESPACE_ID::int32 tz() const;
  void set_tz(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:GRPCECat.FTsensorTx)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 fx_;
  ::PROTOBUF_NAMESPACE_ID::int32 fy_;
  ::PROTOBUF_NAMESPACE_ID::int32 fz_;
  ::PROTOBUF_NAMESPACE_ID::int32 tx_;
  ::PROTOBUF_NAMESPACE_ID::int32 ty_;
  ::PROTOBUF_NAMESPACE_ID::int32 tz_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class IOBoardTx :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.IOBoardTx) */ {
 public:
  IOBoardTx();
  virtual ~IOBoardTx();

  IOBoardTx(const IOBoardTx& from);
  IOBoardTx(IOBoardTx&& from) noexcept
    : IOBoardTx() {
    *this = ::std::move(from);
  }

  inline IOBoardTx& operator=(const IOBoardTx& from) {
    CopyFrom(from);
    return *this;
  }
  inline IOBoardTx& operator=(IOBoardTx&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IOBoardTx& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IOBoardTx* internal_default_instance() {
    return reinterpret_cast<const IOBoardTx*>(
               &_IOBoardTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(IOBoardTx* other);
  friend void swap(IOBoardTx& a, IOBoardTx& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IOBoardTx* New() const final {
    return CreateMaybeMessage<IOBoardTx>(nullptr);
  }

  IOBoardTx* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IOBoardTx>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IOBoardTx& from);
  void MergeFrom(const IOBoardTx& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IOBoardTx* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.IOBoardTx";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .GRPCECat.FTsensorTx ft_sensor = 6;
  bool has_ft_sensor() const;
  void clear_ft_sensor();
  static const int kFtSensorFieldNumber = 6;
  const ::GRPCECat::FTsensorTx& ft_sensor() const;
  ::GRPCECat::FTsensorTx* release_ft_sensor();
  ::GRPCECat::FTsensorTx* mutable_ft_sensor();
  void set_allocated_ft_sensor(::GRPCECat::FTsensorTx* ft_sensor);

  // uint32 di_5v = 1;
  void clear_di_5v();
  static const int kDi5VFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::uint32 di_5v() const;
  void set_di_5v(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 di1 = 2;
  void clear_di1();
  static const int kDi1FieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::uint32 di1() const;
  void set_di1(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 di2 = 3;
  void clear_di2();
  static const int kDi2FieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::uint32 di2() const;
  void set_di2(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 ai1 = 4;
  void clear_ai1();
  static const int kAi1FieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::uint32 ai1() const;
  void set_ai1(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 ai2 = 5;
  void clear_ai2();
  static const int kAi2FieldNumber = 5;
  ::PROTOBUF_NAMESPACE_ID::uint32 ai2() const;
  void set_ai2(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:GRPCECat.IOBoardTx)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::GRPCECat::FTsensorTx* ft_sensor_;
  ::PROTOBUF_NAMESPACE_ID::uint32 di_5v_;
  ::PROTOBUF_NAMESPACE_ID::uint32 di1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 di2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ai1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ai2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class IOBoardRx :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.IOBoardRx) */ {
 public:
  IOBoardRx();
  virtual ~IOBoardRx();

  IOBoardRx(const IOBoardRx& from);
  IOBoardRx(IOBoardRx&& from) noexcept
    : IOBoardRx() {
    *this = ::std::move(from);
  }

  inline IOBoardRx& operator=(const IOBoardRx& from) {
    CopyFrom(from);
    return *this;
  }
  inline IOBoardRx& operator=(IOBoardRx&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IOBoardRx& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IOBoardRx* internal_default_instance() {
    return reinterpret_cast<const IOBoardRx*>(
               &_IOBoardRx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(IOBoardRx* other);
  friend void swap(IOBoardRx& a, IOBoardRx& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IOBoardRx* New() const final {
    return CreateMaybeMessage<IOBoardRx>(nullptr);
  }

  IOBoardRx* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IOBoardRx>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IOBoardRx& from);
  void MergeFrom(const IOBoardRx& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IOBoardRx* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.IOBoardRx";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 do_5v = 1;
  void clear_do_5v();
  static const int kDo5VFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::uint32 do_5v() const;
  void set_do_5v(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 do1 = 2;
  void clear_do1();
  static const int kDo1FieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::uint32 do1() const;
  void set_do1(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 do2 = 3;
  void clear_do2();
  static const int kDo2FieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::uint32 do2() const;
  void set_do2(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 ao1 = 4;
  void clear_ao1();
  static const int kAo1FieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::uint32 ao1() const;
  void set_ao1(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 ao2 = 5;
  void clear_ao2();
  static const int kAo2FieldNumber = 5;
  ::PROTOBUF_NAMESPACE_ID::uint32 ao2() const;
  void set_ao2(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // uint32 ft_param = 6;
  void clear_ft_param();
  static const int kFtParamFieldNumber = 6;
  ::PROTOBUF_NAMESPACE_ID::uint32 ft_param() const;
  void set_ft_param(::PROTOBUF_NAMESPACE_ID::uint32 value);

  // @@protoc_insertion_point(class_scope:GRPCECat.IOBoardRx)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint32 do_5v_;
  ::PROTOBUF_NAMESPACE_ID::uint32 do1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 do2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ao1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ao2_;
  ::PROTOBUF_NAMESPACE_ID::uint32 ft_param_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class EndtoolTx :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.EndtoolTx) */ {
 public:
  EndtoolTx();
  virtual ~EndtoolTx();

  EndtoolTx(const EndtoolTx& from);
  EndtoolTx(EndtoolTx&& from) noexcept
    : EndtoolTx() {
    *this = ::std::move(from);
  }

  inline EndtoolTx& operator=(const EndtoolTx& from) {
    CopyFrom(from);
    return *this;
  }
  inline EndtoolTx& operator=(EndtoolTx&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EndtoolTx& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EndtoolTx* internal_default_instance() {
    return reinterpret_cast<const EndtoolTx*>(
               &_EndtoolTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(EndtoolTx* other);
  friend void swap(EndtoolTx& a, EndtoolTx& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EndtoolTx* New() const final {
    return CreateMaybeMessage<EndtoolTx>(nullptr);
  }

  EndtoolTx* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EndtoolTx>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EndtoolTx& from);
  void MergeFrom(const EndtoolTx& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EndtoolTx* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.EndtoolTx";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 status() const;
  void set_status(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:GRPCECat.EndtoolTx)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class EndtoolRx :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.EndtoolRx) */ {
 public:
  EndtoolRx();
  virtual ~EndtoolRx();

  EndtoolRx(const EndtoolRx& from);
  EndtoolRx(EndtoolRx&& from) noexcept
    : EndtoolRx() {
    *this = ::std::move(from);
  }

  inline EndtoolRx& operator=(const EndtoolRx& from) {
    CopyFrom(from);
    return *this;
  }
  inline EndtoolRx& operator=(EndtoolRx&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EndtoolRx& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EndtoolRx* internal_default_instance() {
    return reinterpret_cast<const EndtoolRx*>(
               &_EndtoolRx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(EndtoolRx* other);
  friend void swap(EndtoolRx& a, EndtoolRx& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EndtoolRx* New() const final {
    return CreateMaybeMessage<EndtoolRx>(nullptr);
  }

  EndtoolRx* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EndtoolRx>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EndtoolRx& from);
  void MergeFrom(const EndtoolRx& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EndtoolRx* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.EndtoolRx";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 eqc = 1;
  void clear_eqc();
  static const int kEqcFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 eqc() const;
  void set_eqc(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 gripper = 2;
  void clear_gripper();
  static const int kGripperFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 gripper() const;
  void set_gripper(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:GRPCECat.EndtoolRx)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 eqc_;
  ::PROTOBUF_NAMESPACE_ID::int32 gripper_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class EndtoolRevCDTTx :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.EndtoolRevCDTTx) */ {
 public:
  EndtoolRevCDTTx();
  virtual ~EndtoolRevCDTTx();

  EndtoolRevCDTTx(const EndtoolRevCDTTx& from);
  EndtoolRevCDTTx(EndtoolRevCDTTx&& from) noexcept
    : EndtoolRevCDTTx() {
    *this = ::std::move(from);
  }

  inline EndtoolRevCDTTx& operator=(const EndtoolRevCDTTx& from) {
    CopyFrom(from);
    return *this;
  }
  inline EndtoolRevCDTTx& operator=(EndtoolRevCDTTx&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const EndtoolRevCDTTx& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EndtoolRevCDTTx* internal_default_instance() {
    return reinterpret_cast<const EndtoolRevCDTTx*>(
               &_EndtoolRevCDTTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(EndtoolRevCDTTx* other);
  friend void swap(EndtoolRevCDTTx& a, EndtoolRevCDTTx& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EndtoolRevCDTTx* New() const final {
    return CreateMaybeMessage<EndtoolRevCDTTx>(nullptr);
  }

  EndtoolRevCDTTx* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<EndtoolRevCDTTx>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const EndtoolRevCDTTx& from);
  void MergeFrom(const EndtoolRevCDTTx& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(EndtoolRevCDTTx* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.EndtoolRevCDTTx";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 status() const;
  void set_status(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 docking_status = 2;
  void clear_docking_status();
  static const int kDockingStatusFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_status() const;
  void set_docking_status(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 docking_button = 3;
  void clear_docking_button();
  static const int kDockingButtonFieldNumber = 3;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_button() const;
  void set_docking_button(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 docking_dist1 = 4;
  void clear_docking_dist1();
  static const int kDockingDist1FieldNumber = 4;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_dist1() const;
  void set_docking_dist1(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 docking_dist2 = 5;
  void clear_docking_dist2();
  static const int kDockingDist2FieldNumber = 5;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_dist2() const;
  void set_docking_dist2(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 docking_dist3 = 6;
  void clear_docking_dist3();
  static const int kDockingDist3FieldNumber = 6;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_dist3() const;
  void set_docking_dist3(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 docking_dist4 = 7;
  void clear_docking_dist4();
  static const int kDockingDist4FieldNumber = 7;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_dist4() const;
  void set_docking_dist4(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 docking_dist5 = 8;
  void clear_docking_dist5();
  static const int kDockingDist5FieldNumber = 8;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_dist5() const;
  void set_docking_dist5(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 docking_dist6 = 9;
  void clear_docking_dist6();
  static const int kDockingDist6FieldNumber = 9;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_dist6() const;
  void set_docking_dist6(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 docking_dist7 = 10;
  void clear_docking_dist7();
  static const int kDockingDist7FieldNumber = 10;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_dist7() const;
  void set_docking_dist7(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 docking_dist8 = 11;
  void clear_docking_dist8();
  static const int kDockingDist8FieldNumber = 11;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_dist8() const;
  void set_docking_dist8(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 direct_status = 12;
  void clear_direct_status();
  static const int kDirectStatusFieldNumber = 12;
  ::PROTOBUF_NAMESPACE_ID::int32 direct_status() const;
  void set_direct_status(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 direct_button = 13;
  void clear_direct_button();
  static const int kDirectButtonFieldNumber = 13;
  ::PROTOBUF_NAMESPACE_ID::int32 direct_button() const;
  void set_direct_button(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 direct_encoder = 14;
  void clear_direct_encoder();
  static const int kDirectEncoderFieldNumber = 14;
  ::PROTOBUF_NAMESPACE_ID::int32 direct_encoder() const;
  void set_direct_encoder(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 direct_joystic1x = 15;
  void clear_direct_joystic1x();
  static const int kDirectJoystic1XFieldNumber = 15;
  ::PROTOBUF_NAMESPACE_ID::int32 direct_joystic1x() const;
  void set_direct_joystic1x(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 direct_joystic1y = 16;
  void clear_direct_joystic1y();
  static const int kDirectJoystic1YFieldNumber = 16;
  ::PROTOBUF_NAMESPACE_ID::int32 direct_joystic1y() const;
  void set_direct_joystic1y(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 direct_joystic2x = 17;
  void clear_direct_joystic2x();
  static const int kDirectJoystic2XFieldNumber = 17;
  ::PROTOBUF_NAMESPACE_ID::int32 direct_joystic2x() const;
  void set_direct_joystic2x(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 direct_joystic2y = 18;
  void clear_direct_joystic2y();
  static const int kDirectJoystic2YFieldNumber = 18;
  ::PROTOBUF_NAMESPACE_ID::int32 direct_joystic2y() const;
  void set_direct_joystic2y(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 ft_status = 19;
  void clear_ft_status();
  static const int kFtStatusFieldNumber = 19;
  ::PROTOBUF_NAMESPACE_ID::int32 ft_status() const;
  void set_ft_status(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 ft_button = 20;
  void clear_ft_button();
  static const int kFtButtonFieldNumber = 20;
  ::PROTOBUF_NAMESPACE_ID::int32 ft_button() const;
  void set_ft_button(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 ft_fx = 21;
  void clear_ft_fx();
  static const int kFtFxFieldNumber = 21;
  ::PROTOBUF_NAMESPACE_ID::int32 ft_fx() const;
  void set_ft_fx(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 ft_fy = 22;
  void clear_ft_fy();
  static const int kFtFyFieldNumber = 22;
  ::PROTOBUF_NAMESPACE_ID::int32 ft_fy() const;
  void set_ft_fy(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 ft_fz = 23;
  void clear_ft_fz();
  static const int kFtFzFieldNumber = 23;
  ::PROTOBUF_NAMESPACE_ID::int32 ft_fz() const;
  void set_ft_fz(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 ft_tx = 24;
  void clear_ft_tx();
  static const int kFtTxFieldNumber = 24;
  ::PROTOBUF_NAMESPACE_ID::int32 ft_tx() const;
  void set_ft_tx(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 ft_ty = 25;
  void clear_ft_ty();
  static const int kFtTyFieldNumber = 25;
  ::PROTOBUF_NAMESPACE_ID::int32 ft_ty() const;
  void set_ft_ty(::PROTOBUF_NAMESPACE_ID::int32 value);

  // int32 ft_tz = 26;
  void clear_ft_tz();
  static const int kFtTzFieldNumber = 26;
  ::PROTOBUF_NAMESPACE_ID::int32 ft_tz() const;
  void set_ft_tz(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:GRPCECat.EndtoolRevCDTTx)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 status_;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_status_;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_button_;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_dist1_;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_dist2_;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_dist3_;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_dist4_;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_dist5_;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_dist6_;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_dist7_;
  ::PROTOBUF_NAMESPACE_ID::int32 docking_dist8_;
  ::PROTOBUF_NAMESPACE_ID::int32 direct_status_;
  ::PROTOBUF_NAMESPACE_ID::int32 direct_button_;
  ::PROTOBUF_NAMESPACE_ID::int32 direct_encoder_;
  ::PROTOBUF_NAMESPACE_ID::int32 direct_joystic1x_;
  ::PROTOBUF_NAMESPACE_ID::int32 direct_joystic1y_;
  ::PROTOBUF_NAMESPACE_ID::int32 direct_joystic2x_;
  ::PROTOBUF_NAMESPACE_ID::int32 direct_joystic2y_;
  ::PROTOBUF_NAMESPACE_ID::int32 ft_status_;
  ::PROTOBUF_NAMESPACE_ID::int32 ft_button_;
  ::PROTOBUF_NAMESPACE_ID::int32 ft_fx_;
  ::PROTOBUF_NAMESPACE_ID::int32 ft_fy_;
  ::PROTOBUF_NAMESPACE_ID::int32 ft_fz_;
  ::PROTOBUF_NAMESPACE_ID::int32 ft_tx_;
  ::PROTOBUF_NAMESPACE_ID::int32 ft_ty_;
  ::PROTOBUF_NAMESPACE_ID::int32 ft_tz_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class DIList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.DIList) */ {
 public:
  DIList();
  virtual ~DIList();

  DIList(const DIList& from);
  DIList(DIList&& from) noexcept
    : DIList() {
    *this = ::std::move(from);
  }

  inline DIList& operator=(const DIList& from) {
    CopyFrom(from);
    return *this;
  }
  inline DIList& operator=(DIList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DIList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DIList* internal_default_instance() {
    return reinterpret_cast<const DIList*>(
               &_DIList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(DIList* other);
  friend void swap(DIList& a, DIList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DIList* New() const final {
    return CreateMaybeMessage<DIList>(nullptr);
  }

  DIList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DIList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DIList& from);
  void MergeFrom(const DIList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DIList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.DIList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 di_list = 2;
  int di_list_size() const;
  void clear_di_list();
  static const int kDiListFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 di_list(int index) const;
  void set_di_list(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_di_list(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      di_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_di_list();

  // int32 idx = 1;
  void clear_idx();
  static const int kIdxFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 idx() const;
  void set_idx(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:GRPCECat.DIList)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > di_list_;
  mutable std::atomic<int> _di_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 idx_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class DOList :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.DOList) */ {
 public:
  DOList();
  virtual ~DOList();

  DOList(const DOList& from);
  DOList(DOList&& from) noexcept
    : DOList() {
    *this = ::std::move(from);
  }

  inline DOList& operator=(const DOList& from) {
    CopyFrom(from);
    return *this;
  }
  inline DOList& operator=(DOList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DOList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DOList* internal_default_instance() {
    return reinterpret_cast<const DOList*>(
               &_DOList_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(DOList* other);
  friend void swap(DOList& a, DOList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DOList* New() const final {
    return CreateMaybeMessage<DOList>(nullptr);
  }

  DOList* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DOList>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DOList& from);
  void MergeFrom(const DOList& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DOList* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.DOList";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 do_list = 2;
  int do_list_size() const;
  void clear_do_list();
  static const int kDoListFieldNumber = 2;
  ::PROTOBUF_NAMESPACE_ID::int32 do_list(int index) const;
  void set_do_list(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_do_list(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      do_list() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_do_list();

  // int32 idx = 1;
  void clear_idx();
  static const int kIdxFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 idx() const;
  void set_idx(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:GRPCECat.DOList)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > do_list_;
  mutable std::atomic<int> _do_list_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::int32 idx_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class RobotusFTTx :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.RobotusFTTx) */ {
 public:
  RobotusFTTx();
  virtual ~RobotusFTTx();

  RobotusFTTx(const RobotusFTTx& from);
  RobotusFTTx(RobotusFTTx&& from) noexcept
    : RobotusFTTx() {
    *this = ::std::move(from);
  }

  inline RobotusFTTx& operator=(const RobotusFTTx& from) {
    CopyFrom(from);
    return *this;
  }
  inline RobotusFTTx& operator=(RobotusFTTx&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RobotusFTTx& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RobotusFTTx* internal_default_instance() {
    return reinterpret_cast<const RobotusFTTx*>(
               &_RobotusFTTx_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(RobotusFTTx* other);
  friend void swap(RobotusFTTx& a, RobotusFTTx& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RobotusFTTx* New() const final {
    return CreateMaybeMessage<RobotusFTTx>(nullptr);
  }

  RobotusFTTx* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RobotusFTTx>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RobotusFTTx& from);
  void MergeFrom(const RobotusFTTx& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RobotusFTTx* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.RobotusFTTx";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float fx = 1;
  void clear_fx();
  static const int kFxFieldNumber = 1;
  float fx() const;
  void set_fx(float value);

  // float fy = 2;
  void clear_fy();
  static const int kFyFieldNumber = 2;
  float fy() const;
  void set_fy(float value);

  // float fz = 3;
  void clear_fz();
  static const int kFzFieldNumber = 3;
  float fz() const;
  void set_fz(float value);

  // float tx = 4;
  void clear_tx();
  static const int kTxFieldNumber = 4;
  float tx() const;
  void set_tx(float value);

  // float ty = 5;
  void clear_ty();
  static const int kTyFieldNumber = 5;
  float ty() const;
  void set_ty(float value);

  // float tz = 6;
  void clear_tz();
  static const int kTzFieldNumber = 6;
  float tz() const;
  void set_tz(float value);

  // @@protoc_insertion_point(class_scope:GRPCECat.RobotusFTTx)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  float fx_;
  float fy_;
  float fz_;
  float tx_;
  float ty_;
  float tz_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class TargetPos :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.TargetPos) */ {
 public:
  TargetPos();
  virtual ~TargetPos();

  TargetPos(const TargetPos& from);
  TargetPos(TargetPos&& from) noexcept
    : TargetPos() {
    *this = ::std::move(from);
  }

  inline TargetPos& operator=(const TargetPos& from) {
    CopyFrom(from);
    return *this;
  }
  inline TargetPos& operator=(TargetPos&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TargetPos& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TargetPos* internal_default_instance() {
    return reinterpret_cast<const TargetPos*>(
               &_TargetPos_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(TargetPos* other);
  friend void swap(TargetPos& a, TargetPos& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TargetPos* New() const final {
    return CreateMaybeMessage<TargetPos>(nullptr);
  }

  TargetPos* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TargetPos>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TargetPos& from);
  void MergeFrom(const TargetPos& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TargetPos* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.TargetPos";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 idx = 1;
  void clear_idx();
  static const int kIdxFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 idx() const;
  void set_idx(::PROTOBUF_NAMESPACE_ID::int32 value);

  // float pos = 2;
  void clear_pos();
  static const int kPosFieldNumber = 2;
  float pos() const;
  void set_pos(float value);

  // @@protoc_insertion_point(class_scope:GRPCECat.TargetPos)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 idx_;
  float pos_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class IntVal :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.IntVal) */ {
 public:
  IntVal();
  virtual ~IntVal();

  IntVal(const IntVal& from);
  IntVal(IntVal&& from) noexcept
    : IntVal() {
    *this = ::std::move(from);
  }

  inline IntVal& operator=(const IntVal& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntVal& operator=(IntVal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IntVal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntVal* internal_default_instance() {
    return reinterpret_cast<const IntVal*>(
               &_IntVal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(IntVal* other);
  friend void swap(IntVal& a, IntVal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntVal* New() const final {
    return CreateMaybeMessage<IntVal>(nullptr);
  }

  IntVal* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IntVal>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IntVal& from);
  void MergeFrom(const IntVal& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntVal* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.IntVal";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 val = 1;
  void clear_val();
  static const int kValFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 val() const;
  void set_val(::PROTOBUF_NAMESPACE_ID::int32 value);

  // @@protoc_insertion_point(class_scope:GRPCECat.IntVal)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 val_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class IntVals :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.IntVals) */ {
 public:
  IntVals();
  virtual ~IntVals();

  IntVals(const IntVals& from);
  IntVals(IntVals&& from) noexcept
    : IntVals() {
    *this = ::std::move(from);
  }

  inline IntVals& operator=(const IntVals& from) {
    CopyFrom(from);
    return *this;
  }
  inline IntVals& operator=(IntVals&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IntVals& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const IntVals* internal_default_instance() {
    return reinterpret_cast<const IntVals*>(
               &_IntVals_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(IntVals* other);
  friend void swap(IntVals& a, IntVals& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntVals* New() const final {
    return CreateMaybeMessage<IntVals>(nullptr);
  }

  IntVals* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IntVals>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IntVals& from);
  void MergeFrom(const IntVals& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IntVals* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.IntVals";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 val = 1;
  int val_size() const;
  void clear_val();
  static const int kValFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 val(int index) const;
  void set_val(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_val(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      val() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_val();

  // @@protoc_insertion_point(class_scope:GRPCECat.IntVals)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > val_;
  mutable std::atomic<int> _val_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class FloatVal :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.FloatVal) */ {
 public:
  FloatVal();
  virtual ~FloatVal();

  FloatVal(const FloatVal& from);
  FloatVal(FloatVal&& from) noexcept
    : FloatVal() {
    *this = ::std::move(from);
  }

  inline FloatVal& operator=(const FloatVal& from) {
    CopyFrom(from);
    return *this;
  }
  inline FloatVal& operator=(FloatVal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FloatVal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FloatVal* internal_default_instance() {
    return reinterpret_cast<const FloatVal*>(
               &_FloatVal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(FloatVal* other);
  friend void swap(FloatVal& a, FloatVal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FloatVal* New() const final {
    return CreateMaybeMessage<FloatVal>(nullptr);
  }

  FloatVal* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FloatVal>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FloatVal& from);
  void MergeFrom(const FloatVal& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FloatVal* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.FloatVal";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float val = 1;
  void clear_val();
  static const int kValFieldNumber = 1;
  float val() const;
  void set_val(float value);

  // @@protoc_insertion_point(class_scope:GRPCECat.FloatVal)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  float val_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class FloatVals :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.FloatVals) */ {
 public:
  FloatVals();
  virtual ~FloatVals();

  FloatVals(const FloatVals& from);
  FloatVals(FloatVals&& from) noexcept
    : FloatVals() {
    *this = ::std::move(from);
  }

  inline FloatVals& operator=(const FloatVals& from) {
    CopyFrom(from);
    return *this;
  }
  inline FloatVals& operator=(FloatVals&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FloatVals& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FloatVals* internal_default_instance() {
    return reinterpret_cast<const FloatVals*>(
               &_FloatVals_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(FloatVals* other);
  friend void swap(FloatVals& a, FloatVals& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FloatVals* New() const final {
    return CreateMaybeMessage<FloatVals>(nullptr);
  }

  FloatVals* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FloatVals>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FloatVals& from);
  void MergeFrom(const FloatVals& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FloatVals* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.FloatVals";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float val = 1;
  int val_size() const;
  void clear_val();
  static const int kValFieldNumber = 1;
  float val(int index) const;
  void set_val(int index, float value);
  void add_val(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      val() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_val();

  // @@protoc_insertion_point(class_scope:GRPCECat.FloatVals)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > val_;
  mutable std::atomic<int> _val_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class StringVal :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.StringVal) */ {
 public:
  StringVal();
  virtual ~StringVal();

  StringVal(const StringVal& from);
  StringVal(StringVal&& from) noexcept
    : StringVal() {
    *this = ::std::move(from);
  }

  inline StringVal& operator=(const StringVal& from) {
    CopyFrom(from);
    return *this;
  }
  inline StringVal& operator=(StringVal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const StringVal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const StringVal* internal_default_instance() {
    return reinterpret_cast<const StringVal*>(
               &_StringVal_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(StringVal* other);
  friend void swap(StringVal& a, StringVal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringVal* New() const final {
    return CreateMaybeMessage<StringVal>(nullptr);
  }

  StringVal* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<StringVal>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const StringVal& from);
  void MergeFrom(const StringVal& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(StringVal* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.StringVal";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string val = 1;
  void clear_val();
  static const int kValFieldNumber = 1;
  const std::string& val() const;
  void set_val(const std::string& value);
  void set_val(std::string&& value);
  void set_val(const char* value);
  void set_val(const char* value, size_t size);
  std::string* mutable_val();
  std::string* release_val();
  void set_allocated_val(std::string* val);

  // @@protoc_insertion_point(class_scope:GRPCECat.StringVal)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr val_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class DoubleVals :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.DoubleVals) */ {
 public:
  DoubleVals();
  virtual ~DoubleVals();

  DoubleVals(const DoubleVals& from);
  DoubleVals(DoubleVals&& from) noexcept
    : DoubleVals() {
    *this = ::std::move(from);
  }

  inline DoubleVals& operator=(const DoubleVals& from) {
    CopyFrom(from);
    return *this;
  }
  inline DoubleVals& operator=(DoubleVals&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DoubleVals& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DoubleVals* internal_default_instance() {
    return reinterpret_cast<const DoubleVals*>(
               &_DoubleVals_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(DoubleVals* other);
  friend void swap(DoubleVals& a, DoubleVals& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DoubleVals* New() const final {
    return CreateMaybeMessage<DoubleVals>(nullptr);
  }

  DoubleVals* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DoubleVals>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DoubleVals& from);
  void MergeFrom(const DoubleVals& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DoubleVals* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.DoubleVals";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated double val = 1;
  int val_size() const;
  void clear_val();
  static const int kValFieldNumber = 1;
  double val(int index) const;
  void set_val(int index, double value);
  void add_val(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      val() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_val();

  // @@protoc_insertion_point(class_scope:GRPCECat.DoubleVals)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > val_;
  mutable std::atomic<int> _val_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// -------------------------------------------------------------------

class VelAccBoundary :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:GRPCECat.VelAccBoundary) */ {
 public:
  VelAccBoundary();
  virtual ~VelAccBoundary();

  VelAccBoundary(const VelAccBoundary& from);
  VelAccBoundary(VelAccBoundary&& from) noexcept
    : VelAccBoundary() {
    *this = ::std::move(from);
  }

  inline VelAccBoundary& operator=(const VelAccBoundary& from) {
    CopyFrom(from);
    return *this;
  }
  inline VelAccBoundary& operator=(VelAccBoundary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VelAccBoundary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VelAccBoundary* internal_default_instance() {
    return reinterpret_cast<const VelAccBoundary*>(
               &_VelAccBoundary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(VelAccBoundary* other);
  friend void swap(VelAccBoundary& a, VelAccBoundary& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline VelAccBoundary* New() const final {
    return CreateMaybeMessage<VelAccBoundary>(nullptr);
  }

  VelAccBoundary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VelAccBoundary>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VelAccBoundary& from);
  void MergeFrom(const VelAccBoundary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  #else
  bool MergePartialFromCodedStream(
      ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const final;
  ::PROTOBUF_NAMESPACE_ID::uint8* InternalSerializeWithCachedSizesToArray(
      ::PROTOBUF_NAMESPACE_ID::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VelAccBoundary* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "GRPCECat.VelAccBoundary";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_EtherCATCommgRPCServer_2eproto);
    return ::descriptor_table_EtherCATCommgRPCServer_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 idx = 1;
  void clear_idx();
  static const int kIdxFieldNumber = 1;
  ::PROTOBUF_NAMESPACE_ID::int32 idx() const;
  void set_idx(::PROTOBUF_NAMESPACE_ID::int32 value);

  // float vmax = 2;
  void clear_vmax();
  static const int kVmaxFieldNumber = 2;
  float vmax() const;
  void set_vmax(float value);

  // float amax = 3;
  void clear_amax();
  static const int kAmaxFieldNumber = 3;
  float amax() const;
  void set_amax(float value);

  // @@protoc_insertion_point(class_scope:GRPCECat.VelAccBoundary)
 private:
  class HasBitSetters;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::int32 idx_;
  float vmax_;
  float amax_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_EtherCATCommgRPCServer_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Empty

// -------------------------------------------------------------------

// ServoIndex

// int32 ecatIndex = 1;
inline void ServoIndex::clear_ecatindex() {
  ecatindex_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ServoIndex::ecatindex() const {
  // @@protoc_insertion_point(field_get:GRPCECat.ServoIndex.ecatIndex)
  return ecatindex_;
}
inline void ServoIndex::set_ecatindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ecatindex_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.ServoIndex.ecatIndex)
}

// bool servoState = 2;
inline void ServoIndex::clear_servostate() {
  servostate_ = false;
}
inline bool ServoIndex::servostate() const {
  // @@protoc_insertion_point(field_get:GRPCECat.ServoIndex.servoState)
  return servostate_;
}
inline void ServoIndex::set_servostate(bool value) {
  
  servostate_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.ServoIndex.servoState)
}

// -------------------------------------------------------------------

// MotorDriverTx

// uint32 statusWord = 1;
inline void MotorDriverTx::clear_statusword() {
  statusword_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MotorDriverTx::statusword() const {
  // @@protoc_insertion_point(field_get:GRPCECat.MotorDriverTx.statusWord)
  return statusword_;
}
inline void MotorDriverTx::set_statusword(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  statusword_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.MotorDriverTx.statusWord)
}

// int32 modeOpDisp = 2;
inline void MotorDriverTx::clear_modeopdisp() {
  modeopdisp_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MotorDriverTx::modeopdisp() const {
  // @@protoc_insertion_point(field_get:GRPCECat.MotorDriverTx.modeOpDisp)
  return modeopdisp_;
}
inline void MotorDriverTx::set_modeopdisp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  modeopdisp_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.MotorDriverTx.modeOpDisp)
}

// int32 actualPosition = 3;
inline void MotorDriverTx::clear_actualposition() {
  actualposition_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MotorDriverTx::actualposition() const {
  // @@protoc_insertion_point(field_get:GRPCECat.MotorDriverTx.actualPosition)
  return actualposition_;
}
inline void MotorDriverTx::set_actualposition(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actualposition_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.MotorDriverTx.actualPosition)
}

// int32 actualVelocity = 4;
inline void MotorDriverTx::clear_actualvelocity() {
  actualvelocity_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MotorDriverTx::actualvelocity() const {
  // @@protoc_insertion_point(field_get:GRPCECat.MotorDriverTx.actualVelocity)
  return actualvelocity_;
}
inline void MotorDriverTx::set_actualvelocity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actualvelocity_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.MotorDriverTx.actualVelocity)
}

// int32 actualTorque = 5;
inline void MotorDriverTx::clear_actualtorque() {
  actualtorque_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MotorDriverTx::actualtorque() const {
  // @@protoc_insertion_point(field_get:GRPCECat.MotorDriverTx.actualTorque)
  return actualtorque_;
}
inline void MotorDriverTx::set_actualtorque(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actualtorque_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.MotorDriverTx.actualTorque)
}

// -------------------------------------------------------------------

// MotorDriverRx

// uint32 controlWord = 1;
inline void MotorDriverRx::clear_controlword() {
  controlword_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MotorDriverRx::controlword() const {
  // @@protoc_insertion_point(field_get:GRPCECat.MotorDriverRx.controlWord)
  return controlword_;
}
inline void MotorDriverRx::set_controlword(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  controlword_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.MotorDriverRx.controlWord)
}

// int32 modeOp = 2;
inline void MotorDriverRx::clear_modeop() {
  modeop_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MotorDriverRx::modeop() const {
  // @@protoc_insertion_point(field_get:GRPCECat.MotorDriverRx.modeOp)
  return modeop_;
}
inline void MotorDriverRx::set_modeop(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  modeop_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.MotorDriverRx.modeOp)
}

// int32 targetPosition = 3;
inline void MotorDriverRx::clear_targetposition() {
  targetposition_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MotorDriverRx::targetposition() const {
  // @@protoc_insertion_point(field_get:GRPCECat.MotorDriverRx.targetPosition)
  return targetposition_;
}
inline void MotorDriverRx::set_targetposition(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  targetposition_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.MotorDriverRx.targetPosition)
}

// int32 targetVelocity = 4;
inline void MotorDriverRx::clear_targetvelocity() {
  targetvelocity_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MotorDriverRx::targetvelocity() const {
  // @@protoc_insertion_point(field_get:GRPCECat.MotorDriverRx.targetVelocity)
  return targetvelocity_;
}
inline void MotorDriverRx::set_targetvelocity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  targetvelocity_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.MotorDriverRx.targetVelocity)
}

// int32 targetTorque = 5;
inline void MotorDriverRx::clear_targettorque() {
  targettorque_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MotorDriverRx::targettorque() const {
  // @@protoc_insertion_point(field_get:GRPCECat.MotorDriverRx.targetTorque)
  return targettorque_;
}
inline void MotorDriverRx::set_targettorque(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  targettorque_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.MotorDriverRx.targetTorque)
}

// -------------------------------------------------------------------

// PanasonicDriverTx

// uint32 statusWord = 1;
inline void PanasonicDriverTx::clear_statusword() {
  statusword_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PanasonicDriverTx::statusword() const {
  // @@protoc_insertion_point(field_get:GRPCECat.PanasonicDriverTx.statusWord)
  return statusword_;
}
inline void PanasonicDriverTx::set_statusword(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  statusword_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.PanasonicDriverTx.statusWord)
}

// int32 modeOpDisp = 2;
inline void PanasonicDriverTx::clear_modeopdisp() {
  modeopdisp_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PanasonicDriverTx::modeopdisp() const {
  // @@protoc_insertion_point(field_get:GRPCECat.PanasonicDriverTx.modeOpDisp)
  return modeopdisp_;
}
inline void PanasonicDriverTx::set_modeopdisp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  modeopdisp_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.PanasonicDriverTx.modeOpDisp)
}

// int32 actualPosition = 3;
inline void PanasonicDriverTx::clear_actualposition() {
  actualposition_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PanasonicDriverTx::actualposition() const {
  // @@protoc_insertion_point(field_get:GRPCECat.PanasonicDriverTx.actualPosition)
  return actualposition_;
}
inline void PanasonicDriverTx::set_actualposition(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actualposition_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.PanasonicDriverTx.actualPosition)
}

// int32 actualVelocity = 4;
inline void PanasonicDriverTx::clear_actualvelocity() {
  actualvelocity_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PanasonicDriverTx::actualvelocity() const {
  // @@protoc_insertion_point(field_get:GRPCECat.PanasonicDriverTx.actualVelocity)
  return actualvelocity_;
}
inline void PanasonicDriverTx::set_actualvelocity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actualvelocity_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.PanasonicDriverTx.actualVelocity)
}

// int32 actualTorque = 5;
inline void PanasonicDriverTx::clear_actualtorque() {
  actualtorque_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PanasonicDriverTx::actualtorque() const {
  // @@protoc_insertion_point(field_get:GRPCECat.PanasonicDriverTx.actualTorque)
  return actualtorque_;
}
inline void PanasonicDriverTx::set_actualtorque(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  actualtorque_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.PanasonicDriverTx.actualTorque)
}

// uint32 errorCode = 6;
inline void PanasonicDriverTx::clear_errorcode() {
  errorcode_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PanasonicDriverTx::errorcode() const {
  // @@protoc_insertion_point(field_get:GRPCECat.PanasonicDriverTx.errorCode)
  return errorcode_;
}
inline void PanasonicDriverTx::set_errorcode(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.PanasonicDriverTx.errorCode)
}

// -------------------------------------------------------------------

// PanasonicDriverRx

// uint32 controlWord = 1;
inline void PanasonicDriverRx::clear_controlword() {
  controlword_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 PanasonicDriverRx::controlword() const {
  // @@protoc_insertion_point(field_get:GRPCECat.PanasonicDriverRx.controlWord)
  return controlword_;
}
inline void PanasonicDriverRx::set_controlword(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  controlword_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.PanasonicDriverRx.controlWord)
}

// int32 modeOp = 2;
inline void PanasonicDriverRx::clear_modeop() {
  modeop_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PanasonicDriverRx::modeop() const {
  // @@protoc_insertion_point(field_get:GRPCECat.PanasonicDriverRx.modeOp)
  return modeop_;
}
inline void PanasonicDriverRx::set_modeop(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  modeop_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.PanasonicDriverRx.modeOp)
}

// int32 targetPosition = 3;
inline void PanasonicDriverRx::clear_targetposition() {
  targetposition_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PanasonicDriverRx::targetposition() const {
  // @@protoc_insertion_point(field_get:GRPCECat.PanasonicDriverRx.targetPosition)
  return targetposition_;
}
inline void PanasonicDriverRx::set_targetposition(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  targetposition_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.PanasonicDriverRx.targetPosition)
}

// int32 targetVelocity = 4;
inline void PanasonicDriverRx::clear_targetvelocity() {
  targetvelocity_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PanasonicDriverRx::targetvelocity() const {
  // @@protoc_insertion_point(field_get:GRPCECat.PanasonicDriverRx.targetVelocity)
  return targetvelocity_;
}
inline void PanasonicDriverRx::set_targetvelocity(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  targetvelocity_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.PanasonicDriverRx.targetVelocity)
}

// int32 targetTorque = 5;
inline void PanasonicDriverRx::clear_targettorque() {
  targettorque_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PanasonicDriverRx::targettorque() const {
  // @@protoc_insertion_point(field_get:GRPCECat.PanasonicDriverRx.targetTorque)
  return targettorque_;
}
inline void PanasonicDriverRx::set_targettorque(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  targettorque_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.PanasonicDriverRx.targetTorque)
}

// int32 maxTorque = 6;
inline void PanasonicDriverRx::clear_maxtorque() {
  maxtorque_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PanasonicDriverRx::maxtorque() const {
  // @@protoc_insertion_point(field_get:GRPCECat.PanasonicDriverRx.maxTorque)
  return maxtorque_;
}
inline void PanasonicDriverRx::set_maxtorque(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  maxtorque_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.PanasonicDriverRx.maxTorque)
}

// int32 maxMotorSpeed = 7;
inline void PanasonicDriverRx::clear_maxmotorspeed() {
  maxmotorspeed_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PanasonicDriverRx::maxmotorspeed() const {
  // @@protoc_insertion_point(field_get:GRPCECat.PanasonicDriverRx.maxMotorSpeed)
  return maxmotorspeed_;
}
inline void PanasonicDriverRx::set_maxmotorspeed(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  maxmotorspeed_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.PanasonicDriverRx.maxMotorSpeed)
}

// int32 touchProbe = 8;
inline void PanasonicDriverRx::clear_touchprobe() {
  touchprobe_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PanasonicDriverRx::touchprobe() const {
  // @@protoc_insertion_point(field_get:GRPCECat.PanasonicDriverRx.touchProbe)
  return touchprobe_;
}
inline void PanasonicDriverRx::set_touchprobe(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  touchprobe_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.PanasonicDriverRx.touchProbe)
}

// -------------------------------------------------------------------

// MotorDriverTxIndex

// uint32 slaveIdx = 1;
inline void MotorDriverTxIndex::clear_slaveidx() {
  slaveidx_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MotorDriverTxIndex::slaveidx() const {
  // @@protoc_insertion_point(field_get:GRPCECat.MotorDriverTxIndex.slaveIdx)
  return slaveidx_;
}
inline void MotorDriverTxIndex::set_slaveidx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  slaveidx_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.MotorDriverTxIndex.slaveIdx)
}

// .GRPCECat.MotorDriverTx motorDriverTx = 2;
inline bool MotorDriverTxIndex::has_motordrivertx() const {
  return this != internal_default_instance() && motordrivertx_ != nullptr;
}
inline void MotorDriverTxIndex::clear_motordrivertx() {
  if (GetArenaNoVirtual() == nullptr && motordrivertx_ != nullptr) {
    delete motordrivertx_;
  }
  motordrivertx_ = nullptr;
}
inline const ::GRPCECat::MotorDriverTx& MotorDriverTxIndex::motordrivertx() const {
  const ::GRPCECat::MotorDriverTx* p = motordrivertx_;
  // @@protoc_insertion_point(field_get:GRPCECat.MotorDriverTxIndex.motorDriverTx)
  return p != nullptr ? *p : *reinterpret_cast<const ::GRPCECat::MotorDriverTx*>(
      &::GRPCECat::_MotorDriverTx_default_instance_);
}
inline ::GRPCECat::MotorDriverTx* MotorDriverTxIndex::release_motordrivertx() {
  // @@protoc_insertion_point(field_release:GRPCECat.MotorDriverTxIndex.motorDriverTx)
  
  ::GRPCECat::MotorDriverTx* temp = motordrivertx_;
  motordrivertx_ = nullptr;
  return temp;
}
inline ::GRPCECat::MotorDriverTx* MotorDriverTxIndex::mutable_motordrivertx() {
  
  if (motordrivertx_ == nullptr) {
    auto* p = CreateMaybeMessage<::GRPCECat::MotorDriverTx>(GetArenaNoVirtual());
    motordrivertx_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GRPCECat.MotorDriverTxIndex.motorDriverTx)
  return motordrivertx_;
}
inline void MotorDriverTxIndex::set_allocated_motordrivertx(::GRPCECat::MotorDriverTx* motordrivertx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete motordrivertx_;
  }
  if (motordrivertx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      motordrivertx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, motordrivertx, submessage_arena);
    }
    
  } else {
    
  }
  motordrivertx_ = motordrivertx;
  // @@protoc_insertion_point(field_set_allocated:GRPCECat.MotorDriverTxIndex.motorDriverTx)
}

// -------------------------------------------------------------------

// MotorDriverRxIndex

// uint32 slaveIdx = 1;
inline void MotorDriverRxIndex::clear_slaveidx() {
  slaveidx_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MotorDriverRxIndex::slaveidx() const {
  // @@protoc_insertion_point(field_get:GRPCECat.MotorDriverRxIndex.slaveIdx)
  return slaveidx_;
}
inline void MotorDriverRxIndex::set_slaveidx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  slaveidx_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.MotorDriverRxIndex.slaveIdx)
}

// .GRPCECat.MotorDriverRx motorDriverRx = 2;
inline bool MotorDriverRxIndex::has_motordriverrx() const {
  return this != internal_default_instance() && motordriverrx_ != nullptr;
}
inline void MotorDriverRxIndex::clear_motordriverrx() {
  if (GetArenaNoVirtual() == nullptr && motordriverrx_ != nullptr) {
    delete motordriverrx_;
  }
  motordriverrx_ = nullptr;
}
inline const ::GRPCECat::MotorDriverRx& MotorDriverRxIndex::motordriverrx() const {
  const ::GRPCECat::MotorDriverRx* p = motordriverrx_;
  // @@protoc_insertion_point(field_get:GRPCECat.MotorDriverRxIndex.motorDriverRx)
  return p != nullptr ? *p : *reinterpret_cast<const ::GRPCECat::MotorDriverRx*>(
      &::GRPCECat::_MotorDriverRx_default_instance_);
}
inline ::GRPCECat::MotorDriverRx* MotorDriverRxIndex::release_motordriverrx() {
  // @@protoc_insertion_point(field_release:GRPCECat.MotorDriverRxIndex.motorDriverRx)
  
  ::GRPCECat::MotorDriverRx* temp = motordriverrx_;
  motordriverrx_ = nullptr;
  return temp;
}
inline ::GRPCECat::MotorDriverRx* MotorDriverRxIndex::mutable_motordriverrx() {
  
  if (motordriverrx_ == nullptr) {
    auto* p = CreateMaybeMessage<::GRPCECat::MotorDriverRx>(GetArenaNoVirtual());
    motordriverrx_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GRPCECat.MotorDriverRxIndex.motorDriverRx)
  return motordriverrx_;
}
inline void MotorDriverRxIndex::set_allocated_motordriverrx(::GRPCECat::MotorDriverRx* motordriverrx) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete motordriverrx_;
  }
  if (motordriverrx) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      motordriverrx = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, motordriverrx, submessage_arena);
    }
    
  } else {
    
  }
  motordriverrx_ = motordriverrx;
  // @@protoc_insertion_point(field_set_allocated:GRPCECat.MotorDriverRxIndex.motorDriverRx)
}

// -------------------------------------------------------------------

// ServoParam

// uint32 slaveIdx = 1;
inline void ServoParam::clear_slaveidx() {
  slaveidx_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ServoParam::slaveidx() const {
  // @@protoc_insertion_point(field_get:GRPCECat.ServoParam.slaveIdx)
  return slaveidx_;
}
inline void ServoParam::set_slaveidx(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  slaveidx_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.ServoParam.slaveIdx)
}

// int32 val = 2;
inline void ServoParam::clear_val() {
  val_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ServoParam::val() const {
  // @@protoc_insertion_point(field_get:GRPCECat.ServoParam.val)
  return val_;
}
inline void ServoParam::set_val(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  val_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.ServoParam.val)
}

// -------------------------------------------------------------------

// FTsensorTx

// int32 fx = 1;
inline void FTsensorTx::clear_fx() {
  fx_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FTsensorTx::fx() const {
  // @@protoc_insertion_point(field_get:GRPCECat.FTsensorTx.fx)
  return fx_;
}
inline void FTsensorTx::set_fx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  fx_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.FTsensorTx.fx)
}

// int32 fy = 2;
inline void FTsensorTx::clear_fy() {
  fy_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FTsensorTx::fy() const {
  // @@protoc_insertion_point(field_get:GRPCECat.FTsensorTx.fy)
  return fy_;
}
inline void FTsensorTx::set_fy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  fy_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.FTsensorTx.fy)
}

// int32 fz = 3;
inline void FTsensorTx::clear_fz() {
  fz_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FTsensorTx::fz() const {
  // @@protoc_insertion_point(field_get:GRPCECat.FTsensorTx.fz)
  return fz_;
}
inline void FTsensorTx::set_fz(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  fz_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.FTsensorTx.fz)
}

// int32 tx = 4;
inline void FTsensorTx::clear_tx() {
  tx_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FTsensorTx::tx() const {
  // @@protoc_insertion_point(field_get:GRPCECat.FTsensorTx.tx)
  return tx_;
}
inline void FTsensorTx::set_tx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  tx_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.FTsensorTx.tx)
}

// int32 ty = 5;
inline void FTsensorTx::clear_ty() {
  ty_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FTsensorTx::ty() const {
  // @@protoc_insertion_point(field_get:GRPCECat.FTsensorTx.ty)
  return ty_;
}
inline void FTsensorTx::set_ty(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ty_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.FTsensorTx.ty)
}

// int32 tz = 6;
inline void FTsensorTx::clear_tz() {
  tz_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FTsensorTx::tz() const {
  // @@protoc_insertion_point(field_get:GRPCECat.FTsensorTx.tz)
  return tz_;
}
inline void FTsensorTx::set_tz(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  tz_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.FTsensorTx.tz)
}

// -------------------------------------------------------------------

// IOBoardTx

// uint32 di_5v = 1;
inline void IOBoardTx::clear_di_5v() {
  di_5v_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IOBoardTx::di_5v() const {
  // @@protoc_insertion_point(field_get:GRPCECat.IOBoardTx.di_5v)
  return di_5v_;
}
inline void IOBoardTx::set_di_5v(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  di_5v_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.IOBoardTx.di_5v)
}

// uint32 di1 = 2;
inline void IOBoardTx::clear_di1() {
  di1_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IOBoardTx::di1() const {
  // @@protoc_insertion_point(field_get:GRPCECat.IOBoardTx.di1)
  return di1_;
}
inline void IOBoardTx::set_di1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  di1_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.IOBoardTx.di1)
}

// uint32 di2 = 3;
inline void IOBoardTx::clear_di2() {
  di2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IOBoardTx::di2() const {
  // @@protoc_insertion_point(field_get:GRPCECat.IOBoardTx.di2)
  return di2_;
}
inline void IOBoardTx::set_di2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  di2_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.IOBoardTx.di2)
}

// uint32 ai1 = 4;
inline void IOBoardTx::clear_ai1() {
  ai1_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IOBoardTx::ai1() const {
  // @@protoc_insertion_point(field_get:GRPCECat.IOBoardTx.ai1)
  return ai1_;
}
inline void IOBoardTx::set_ai1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ai1_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.IOBoardTx.ai1)
}

// uint32 ai2 = 5;
inline void IOBoardTx::clear_ai2() {
  ai2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IOBoardTx::ai2() const {
  // @@protoc_insertion_point(field_get:GRPCECat.IOBoardTx.ai2)
  return ai2_;
}
inline void IOBoardTx::set_ai2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ai2_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.IOBoardTx.ai2)
}

// .GRPCECat.FTsensorTx ft_sensor = 6;
inline bool IOBoardTx::has_ft_sensor() const {
  return this != internal_default_instance() && ft_sensor_ != nullptr;
}
inline void IOBoardTx::clear_ft_sensor() {
  if (GetArenaNoVirtual() == nullptr && ft_sensor_ != nullptr) {
    delete ft_sensor_;
  }
  ft_sensor_ = nullptr;
}
inline const ::GRPCECat::FTsensorTx& IOBoardTx::ft_sensor() const {
  const ::GRPCECat::FTsensorTx* p = ft_sensor_;
  // @@protoc_insertion_point(field_get:GRPCECat.IOBoardTx.ft_sensor)
  return p != nullptr ? *p : *reinterpret_cast<const ::GRPCECat::FTsensorTx*>(
      &::GRPCECat::_FTsensorTx_default_instance_);
}
inline ::GRPCECat::FTsensorTx* IOBoardTx::release_ft_sensor() {
  // @@protoc_insertion_point(field_release:GRPCECat.IOBoardTx.ft_sensor)
  
  ::GRPCECat::FTsensorTx* temp = ft_sensor_;
  ft_sensor_ = nullptr;
  return temp;
}
inline ::GRPCECat::FTsensorTx* IOBoardTx::mutable_ft_sensor() {
  
  if (ft_sensor_ == nullptr) {
    auto* p = CreateMaybeMessage<::GRPCECat::FTsensorTx>(GetArenaNoVirtual());
    ft_sensor_ = p;
  }
  // @@protoc_insertion_point(field_mutable:GRPCECat.IOBoardTx.ft_sensor)
  return ft_sensor_;
}
inline void IOBoardTx::set_allocated_ft_sensor(::GRPCECat::FTsensorTx* ft_sensor) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete ft_sensor_;
  }
  if (ft_sensor) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ft_sensor = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ft_sensor, submessage_arena);
    }
    
  } else {
    
  }
  ft_sensor_ = ft_sensor;
  // @@protoc_insertion_point(field_set_allocated:GRPCECat.IOBoardTx.ft_sensor)
}

// -------------------------------------------------------------------

// IOBoardRx

// uint32 do_5v = 1;
inline void IOBoardRx::clear_do_5v() {
  do_5v_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IOBoardRx::do_5v() const {
  // @@protoc_insertion_point(field_get:GRPCECat.IOBoardRx.do_5v)
  return do_5v_;
}
inline void IOBoardRx::set_do_5v(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  do_5v_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.IOBoardRx.do_5v)
}

// uint32 do1 = 2;
inline void IOBoardRx::clear_do1() {
  do1_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IOBoardRx::do1() const {
  // @@protoc_insertion_point(field_get:GRPCECat.IOBoardRx.do1)
  return do1_;
}
inline void IOBoardRx::set_do1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  do1_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.IOBoardRx.do1)
}

// uint32 do2 = 3;
inline void IOBoardRx::clear_do2() {
  do2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IOBoardRx::do2() const {
  // @@protoc_insertion_point(field_get:GRPCECat.IOBoardRx.do2)
  return do2_;
}
inline void IOBoardRx::set_do2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  do2_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.IOBoardRx.do2)
}

// uint32 ao1 = 4;
inline void IOBoardRx::clear_ao1() {
  ao1_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IOBoardRx::ao1() const {
  // @@protoc_insertion_point(field_get:GRPCECat.IOBoardRx.ao1)
  return ao1_;
}
inline void IOBoardRx::set_ao1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ao1_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.IOBoardRx.ao1)
}

// uint32 ao2 = 5;
inline void IOBoardRx::clear_ao2() {
  ao2_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IOBoardRx::ao2() const {
  // @@protoc_insertion_point(field_get:GRPCECat.IOBoardRx.ao2)
  return ao2_;
}
inline void IOBoardRx::set_ao2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ao2_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.IOBoardRx.ao2)
}

// uint32 ft_param = 6;
inline void IOBoardRx::clear_ft_param() {
  ft_param_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 IOBoardRx::ft_param() const {
  // @@protoc_insertion_point(field_get:GRPCECat.IOBoardRx.ft_param)
  return ft_param_;
}
inline void IOBoardRx::set_ft_param(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  ft_param_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.IOBoardRx.ft_param)
}

// -------------------------------------------------------------------

// EndtoolTx

// int32 status = 1;
inline void EndtoolTx::clear_status() {
  status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolTx::status() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolTx.status)
  return status_;
}
inline void EndtoolTx::set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolTx.status)
}

// -------------------------------------------------------------------

// EndtoolRx

// int32 eqc = 1;
inline void EndtoolRx::clear_eqc() {
  eqc_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRx::eqc() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRx.eqc)
  return eqc_;
}
inline void EndtoolRx::set_eqc(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  eqc_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRx.eqc)
}

// int32 gripper = 2;
inline void EndtoolRx::clear_gripper() {
  gripper_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRx::gripper() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRx.gripper)
  return gripper_;
}
inline void EndtoolRx::set_gripper(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  gripper_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRx.gripper)
}

// -------------------------------------------------------------------

// EndtoolRevCDTTx

// int32 status = 1;
inline void EndtoolRevCDTTx::clear_status() {
  status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::status() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.status)
  return status_;
}
inline void EndtoolRevCDTTx::set_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.status)
}

// int32 docking_status = 2;
inline void EndtoolRevCDTTx::clear_docking_status() {
  docking_status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::docking_status() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.docking_status)
  return docking_status_;
}
inline void EndtoolRevCDTTx::set_docking_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  docking_status_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.docking_status)
}

// int32 docking_button = 3;
inline void EndtoolRevCDTTx::clear_docking_button() {
  docking_button_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::docking_button() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.docking_button)
  return docking_button_;
}
inline void EndtoolRevCDTTx::set_docking_button(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  docking_button_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.docking_button)
}

// int32 docking_dist1 = 4;
inline void EndtoolRevCDTTx::clear_docking_dist1() {
  docking_dist1_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::docking_dist1() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.docking_dist1)
  return docking_dist1_;
}
inline void EndtoolRevCDTTx::set_docking_dist1(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  docking_dist1_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.docking_dist1)
}

// int32 docking_dist2 = 5;
inline void EndtoolRevCDTTx::clear_docking_dist2() {
  docking_dist2_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::docking_dist2() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.docking_dist2)
  return docking_dist2_;
}
inline void EndtoolRevCDTTx::set_docking_dist2(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  docking_dist2_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.docking_dist2)
}

// int32 docking_dist3 = 6;
inline void EndtoolRevCDTTx::clear_docking_dist3() {
  docking_dist3_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::docking_dist3() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.docking_dist3)
  return docking_dist3_;
}
inline void EndtoolRevCDTTx::set_docking_dist3(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  docking_dist3_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.docking_dist3)
}

// int32 docking_dist4 = 7;
inline void EndtoolRevCDTTx::clear_docking_dist4() {
  docking_dist4_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::docking_dist4() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.docking_dist4)
  return docking_dist4_;
}
inline void EndtoolRevCDTTx::set_docking_dist4(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  docking_dist4_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.docking_dist4)
}

// int32 docking_dist5 = 8;
inline void EndtoolRevCDTTx::clear_docking_dist5() {
  docking_dist5_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::docking_dist5() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.docking_dist5)
  return docking_dist5_;
}
inline void EndtoolRevCDTTx::set_docking_dist5(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  docking_dist5_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.docking_dist5)
}

// int32 docking_dist6 = 9;
inline void EndtoolRevCDTTx::clear_docking_dist6() {
  docking_dist6_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::docking_dist6() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.docking_dist6)
  return docking_dist6_;
}
inline void EndtoolRevCDTTx::set_docking_dist6(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  docking_dist6_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.docking_dist6)
}

// int32 docking_dist7 = 10;
inline void EndtoolRevCDTTx::clear_docking_dist7() {
  docking_dist7_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::docking_dist7() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.docking_dist7)
  return docking_dist7_;
}
inline void EndtoolRevCDTTx::set_docking_dist7(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  docking_dist7_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.docking_dist7)
}

// int32 docking_dist8 = 11;
inline void EndtoolRevCDTTx::clear_docking_dist8() {
  docking_dist8_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::docking_dist8() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.docking_dist8)
  return docking_dist8_;
}
inline void EndtoolRevCDTTx::set_docking_dist8(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  docking_dist8_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.docking_dist8)
}

// int32 direct_status = 12;
inline void EndtoolRevCDTTx::clear_direct_status() {
  direct_status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::direct_status() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.direct_status)
  return direct_status_;
}
inline void EndtoolRevCDTTx::set_direct_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  direct_status_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.direct_status)
}

// int32 direct_button = 13;
inline void EndtoolRevCDTTx::clear_direct_button() {
  direct_button_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::direct_button() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.direct_button)
  return direct_button_;
}
inline void EndtoolRevCDTTx::set_direct_button(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  direct_button_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.direct_button)
}

// int32 direct_encoder = 14;
inline void EndtoolRevCDTTx::clear_direct_encoder() {
  direct_encoder_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::direct_encoder() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.direct_encoder)
  return direct_encoder_;
}
inline void EndtoolRevCDTTx::set_direct_encoder(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  direct_encoder_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.direct_encoder)
}

// int32 direct_joystic1x = 15;
inline void EndtoolRevCDTTx::clear_direct_joystic1x() {
  direct_joystic1x_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::direct_joystic1x() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.direct_joystic1x)
  return direct_joystic1x_;
}
inline void EndtoolRevCDTTx::set_direct_joystic1x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  direct_joystic1x_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.direct_joystic1x)
}

// int32 direct_joystic1y = 16;
inline void EndtoolRevCDTTx::clear_direct_joystic1y() {
  direct_joystic1y_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::direct_joystic1y() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.direct_joystic1y)
  return direct_joystic1y_;
}
inline void EndtoolRevCDTTx::set_direct_joystic1y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  direct_joystic1y_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.direct_joystic1y)
}

// int32 direct_joystic2x = 17;
inline void EndtoolRevCDTTx::clear_direct_joystic2x() {
  direct_joystic2x_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::direct_joystic2x() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.direct_joystic2x)
  return direct_joystic2x_;
}
inline void EndtoolRevCDTTx::set_direct_joystic2x(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  direct_joystic2x_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.direct_joystic2x)
}

// int32 direct_joystic2y = 18;
inline void EndtoolRevCDTTx::clear_direct_joystic2y() {
  direct_joystic2y_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::direct_joystic2y() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.direct_joystic2y)
  return direct_joystic2y_;
}
inline void EndtoolRevCDTTx::set_direct_joystic2y(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  direct_joystic2y_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.direct_joystic2y)
}

// int32 ft_status = 19;
inline void EndtoolRevCDTTx::clear_ft_status() {
  ft_status_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::ft_status() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.ft_status)
  return ft_status_;
}
inline void EndtoolRevCDTTx::set_ft_status(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ft_status_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.ft_status)
}

// int32 ft_button = 20;
inline void EndtoolRevCDTTx::clear_ft_button() {
  ft_button_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::ft_button() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.ft_button)
  return ft_button_;
}
inline void EndtoolRevCDTTx::set_ft_button(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ft_button_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.ft_button)
}

// int32 ft_fx = 21;
inline void EndtoolRevCDTTx::clear_ft_fx() {
  ft_fx_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::ft_fx() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.ft_fx)
  return ft_fx_;
}
inline void EndtoolRevCDTTx::set_ft_fx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ft_fx_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.ft_fx)
}

// int32 ft_fy = 22;
inline void EndtoolRevCDTTx::clear_ft_fy() {
  ft_fy_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::ft_fy() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.ft_fy)
  return ft_fy_;
}
inline void EndtoolRevCDTTx::set_ft_fy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ft_fy_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.ft_fy)
}

// int32 ft_fz = 23;
inline void EndtoolRevCDTTx::clear_ft_fz() {
  ft_fz_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::ft_fz() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.ft_fz)
  return ft_fz_;
}
inline void EndtoolRevCDTTx::set_ft_fz(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ft_fz_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.ft_fz)
}

// int32 ft_tx = 24;
inline void EndtoolRevCDTTx::clear_ft_tx() {
  ft_tx_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::ft_tx() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.ft_tx)
  return ft_tx_;
}
inline void EndtoolRevCDTTx::set_ft_tx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ft_tx_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.ft_tx)
}

// int32 ft_ty = 25;
inline void EndtoolRevCDTTx::clear_ft_ty() {
  ft_ty_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::ft_ty() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.ft_ty)
  return ft_ty_;
}
inline void EndtoolRevCDTTx::set_ft_ty(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ft_ty_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.ft_ty)
}

// int32 ft_tz = 26;
inline void EndtoolRevCDTTx::clear_ft_tz() {
  ft_tz_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 EndtoolRevCDTTx::ft_tz() const {
  // @@protoc_insertion_point(field_get:GRPCECat.EndtoolRevCDTTx.ft_tz)
  return ft_tz_;
}
inline void EndtoolRevCDTTx::set_ft_tz(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  ft_tz_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.EndtoolRevCDTTx.ft_tz)
}

// -------------------------------------------------------------------

// DIList

// int32 idx = 1;
inline void DIList::clear_idx() {
  idx_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DIList::idx() const {
  // @@protoc_insertion_point(field_get:GRPCECat.DIList.idx)
  return idx_;
}
inline void DIList::set_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  idx_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.DIList.idx)
}

// repeated int32 di_list = 2;
inline int DIList::di_list_size() const {
  return di_list_.size();
}
inline void DIList::clear_di_list() {
  di_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DIList::di_list(int index) const {
  // @@protoc_insertion_point(field_get:GRPCECat.DIList.di_list)
  return di_list_.Get(index);
}
inline void DIList::set_di_list(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  di_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:GRPCECat.DIList.di_list)
}
inline void DIList::add_di_list(::PROTOBUF_NAMESPACE_ID::int32 value) {
  di_list_.Add(value);
  // @@protoc_insertion_point(field_add:GRPCECat.DIList.di_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
DIList::di_list() const {
  // @@protoc_insertion_point(field_list:GRPCECat.DIList.di_list)
  return di_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
DIList::mutable_di_list() {
  // @@protoc_insertion_point(field_mutable_list:GRPCECat.DIList.di_list)
  return &di_list_;
}

// -------------------------------------------------------------------

// DOList

// int32 idx = 1;
inline void DOList::clear_idx() {
  idx_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DOList::idx() const {
  // @@protoc_insertion_point(field_get:GRPCECat.DOList.idx)
  return idx_;
}
inline void DOList::set_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  idx_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.DOList.idx)
}

// repeated int32 do_list = 2;
inline int DOList::do_list_size() const {
  return do_list_.size();
}
inline void DOList::clear_do_list() {
  do_list_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DOList::do_list(int index) const {
  // @@protoc_insertion_point(field_get:GRPCECat.DOList.do_list)
  return do_list_.Get(index);
}
inline void DOList::set_do_list(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  do_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:GRPCECat.DOList.do_list)
}
inline void DOList::add_do_list(::PROTOBUF_NAMESPACE_ID::int32 value) {
  do_list_.Add(value);
  // @@protoc_insertion_point(field_add:GRPCECat.DOList.do_list)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
DOList::do_list() const {
  // @@protoc_insertion_point(field_list:GRPCECat.DOList.do_list)
  return do_list_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
DOList::mutable_do_list() {
  // @@protoc_insertion_point(field_mutable_list:GRPCECat.DOList.do_list)
  return &do_list_;
}

// -------------------------------------------------------------------

// RobotusFTTx

// float fx = 1;
inline void RobotusFTTx::clear_fx() {
  fx_ = 0;
}
inline float RobotusFTTx::fx() const {
  // @@protoc_insertion_point(field_get:GRPCECat.RobotusFTTx.fx)
  return fx_;
}
inline void RobotusFTTx::set_fx(float value) {
  
  fx_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.RobotusFTTx.fx)
}

// float fy = 2;
inline void RobotusFTTx::clear_fy() {
  fy_ = 0;
}
inline float RobotusFTTx::fy() const {
  // @@protoc_insertion_point(field_get:GRPCECat.RobotusFTTx.fy)
  return fy_;
}
inline void RobotusFTTx::set_fy(float value) {
  
  fy_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.RobotusFTTx.fy)
}

// float fz = 3;
inline void RobotusFTTx::clear_fz() {
  fz_ = 0;
}
inline float RobotusFTTx::fz() const {
  // @@protoc_insertion_point(field_get:GRPCECat.RobotusFTTx.fz)
  return fz_;
}
inline void RobotusFTTx::set_fz(float value) {
  
  fz_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.RobotusFTTx.fz)
}

// float tx = 4;
inline void RobotusFTTx::clear_tx() {
  tx_ = 0;
}
inline float RobotusFTTx::tx() const {
  // @@protoc_insertion_point(field_get:GRPCECat.RobotusFTTx.tx)
  return tx_;
}
inline void RobotusFTTx::set_tx(float value) {
  
  tx_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.RobotusFTTx.tx)
}

// float ty = 5;
inline void RobotusFTTx::clear_ty() {
  ty_ = 0;
}
inline float RobotusFTTx::ty() const {
  // @@protoc_insertion_point(field_get:GRPCECat.RobotusFTTx.ty)
  return ty_;
}
inline void RobotusFTTx::set_ty(float value) {
  
  ty_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.RobotusFTTx.ty)
}

// float tz = 6;
inline void RobotusFTTx::clear_tz() {
  tz_ = 0;
}
inline float RobotusFTTx::tz() const {
  // @@protoc_insertion_point(field_get:GRPCECat.RobotusFTTx.tz)
  return tz_;
}
inline void RobotusFTTx::set_tz(float value) {
  
  tz_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.RobotusFTTx.tz)
}

// -------------------------------------------------------------------

// TargetPos

// int32 idx = 1;
inline void TargetPos::clear_idx() {
  idx_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TargetPos::idx() const {
  // @@protoc_insertion_point(field_get:GRPCECat.TargetPos.idx)
  return idx_;
}
inline void TargetPos::set_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  idx_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.TargetPos.idx)
}

// float pos = 2;
inline void TargetPos::clear_pos() {
  pos_ = 0;
}
inline float TargetPos::pos() const {
  // @@protoc_insertion_point(field_get:GRPCECat.TargetPos.pos)
  return pos_;
}
inline void TargetPos::set_pos(float value) {
  
  pos_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.TargetPos.pos)
}

// -------------------------------------------------------------------

// IntVal

// int32 val = 1;
inline void IntVal::clear_val() {
  val_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IntVal::val() const {
  // @@protoc_insertion_point(field_get:GRPCECat.IntVal.val)
  return val_;
}
inline void IntVal::set_val(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  val_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.IntVal.val)
}

// -------------------------------------------------------------------

// IntVals

// repeated int32 val = 1;
inline int IntVals::val_size() const {
  return val_.size();
}
inline void IntVals::clear_val() {
  val_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 IntVals::val(int index) const {
  // @@protoc_insertion_point(field_get:GRPCECat.IntVals.val)
  return val_.Get(index);
}
inline void IntVals::set_val(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  val_.Set(index, value);
  // @@protoc_insertion_point(field_set:GRPCECat.IntVals.val)
}
inline void IntVals::add_val(::PROTOBUF_NAMESPACE_ID::int32 value) {
  val_.Add(value);
  // @@protoc_insertion_point(field_add:GRPCECat.IntVals.val)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
IntVals::val() const {
  // @@protoc_insertion_point(field_list:GRPCECat.IntVals.val)
  return val_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
IntVals::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:GRPCECat.IntVals.val)
  return &val_;
}

// -------------------------------------------------------------------

// FloatVal

// float val = 1;
inline void FloatVal::clear_val() {
  val_ = 0;
}
inline float FloatVal::val() const {
  // @@protoc_insertion_point(field_get:GRPCECat.FloatVal.val)
  return val_;
}
inline void FloatVal::set_val(float value) {
  
  val_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.FloatVal.val)
}

// -------------------------------------------------------------------

// FloatVals

// repeated float val = 1;
inline int FloatVals::val_size() const {
  return val_.size();
}
inline void FloatVals::clear_val() {
  val_.Clear();
}
inline float FloatVals::val(int index) const {
  // @@protoc_insertion_point(field_get:GRPCECat.FloatVals.val)
  return val_.Get(index);
}
inline void FloatVals::set_val(int index, float value) {
  val_.Set(index, value);
  // @@protoc_insertion_point(field_set:GRPCECat.FloatVals.val)
}
inline void FloatVals::add_val(float value) {
  val_.Add(value);
  // @@protoc_insertion_point(field_add:GRPCECat.FloatVals.val)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
FloatVals::val() const {
  // @@protoc_insertion_point(field_list:GRPCECat.FloatVals.val)
  return val_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
FloatVals::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:GRPCECat.FloatVals.val)
  return &val_;
}

// -------------------------------------------------------------------

// StringVal

// string val = 1;
inline void StringVal::clear_val() {
  val_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline const std::string& StringVal::val() const {
  // @@protoc_insertion_point(field_get:GRPCECat.StringVal.val)
  return val_.GetNoArena();
}
inline void StringVal::set_val(const std::string& value) {
  
  val_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GRPCECat.StringVal.val)
}
inline void StringVal::set_val(std::string&& value) {
  
  val_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GRPCECat.StringVal.val)
}
inline void StringVal::set_val(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  val_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GRPCECat.StringVal.val)
}
inline void StringVal::set_val(const char* value, size_t size) {
  
  val_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GRPCECat.StringVal.val)
}
inline std::string* StringVal::mutable_val() {
  
  // @@protoc_insertion_point(field_mutable:GRPCECat.StringVal.val)
  return val_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* StringVal::release_val() {
  // @@protoc_insertion_point(field_release:GRPCECat.StringVal.val)
  
  return val_.ReleaseNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void StringVal::set_allocated_val(std::string* val) {
  if (val != nullptr) {
    
  } else {
    
  }
  val_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), val);
  // @@protoc_insertion_point(field_set_allocated:GRPCECat.StringVal.val)
}

// -------------------------------------------------------------------

// DoubleVals

// repeated double val = 1;
inline int DoubleVals::val_size() const {
  return val_.size();
}
inline void DoubleVals::clear_val() {
  val_.Clear();
}
inline double DoubleVals::val(int index) const {
  // @@protoc_insertion_point(field_get:GRPCECat.DoubleVals.val)
  return val_.Get(index);
}
inline void DoubleVals::set_val(int index, double value) {
  val_.Set(index, value);
  // @@protoc_insertion_point(field_set:GRPCECat.DoubleVals.val)
}
inline void DoubleVals::add_val(double value) {
  val_.Add(value);
  // @@protoc_insertion_point(field_add:GRPCECat.DoubleVals.val)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
DoubleVals::val() const {
  // @@protoc_insertion_point(field_list:GRPCECat.DoubleVals.val)
  return val_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
DoubleVals::mutable_val() {
  // @@protoc_insertion_point(field_mutable_list:GRPCECat.DoubleVals.val)
  return &val_;
}

// -------------------------------------------------------------------

// VelAccBoundary

// int32 idx = 1;
inline void VelAccBoundary::clear_idx() {
  idx_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 VelAccBoundary::idx() const {
  // @@protoc_insertion_point(field_get:GRPCECat.VelAccBoundary.idx)
  return idx_;
}
inline void VelAccBoundary::set_idx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  idx_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.VelAccBoundary.idx)
}

// float vmax = 2;
inline void VelAccBoundary::clear_vmax() {
  vmax_ = 0;
}
inline float VelAccBoundary::vmax() const {
  // @@protoc_insertion_point(field_get:GRPCECat.VelAccBoundary.vmax)
  return vmax_;
}
inline void VelAccBoundary::set_vmax(float value) {
  
  vmax_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.VelAccBoundary.vmax)
}

// float amax = 3;
inline void VelAccBoundary::clear_amax() {
  amax_ = 0;
}
inline float VelAccBoundary::amax() const {
  // @@protoc_insertion_point(field_get:GRPCECat.VelAccBoundary.amax)
  return amax_;
}
inline void VelAccBoundary::set_amax(float value) {
  
  amax_ = value;
  // @@protoc_insertion_point(field_set:GRPCECat.VelAccBoundary.amax)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace GRPCECat

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_EtherCATCommgRPCServer_2eproto
